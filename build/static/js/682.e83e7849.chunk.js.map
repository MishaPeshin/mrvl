{"version":3,"file":"static/js/682.e83e7849.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif'\n\nconst ErrorMessage = () => {\n    return (\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\" /> /* для работы с папкой public */\n        <img src={img} alt=\"error\" style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} />\n    )\n}\n\nexport default ErrorMessage","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst setContent = (process, Component, newItemsLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner />;\n        case 'loading':\n            return newItemsLoading ? <Component /> : <Spinner />;\n        case 'confirmed':\n            return <Component />;\n        case 'error':\n            return <ErrorMessage />;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(210);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { getAllComics, process, setProcess } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true)\n        getAllComics(offset)\n            .then(onComicsList)\n            .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsList = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemsLoading(false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            const { title, thumbnail, price, } = item;\n            return (\n                <li\n                    className=\"comics__item\"\n                    tabIndex={0}\n                    key={i}>\n\n                    <Link to={`${item.id}`}>\n                        <img src={thumbnail} alt={title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{title}</div>\n                        <div className=\"comics__item-price\">{price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    return (\n        <div className=\"comics__list\">\n            {setContent(process, () => renderItems(comicsList), newItemsLoading)}\n            <button\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                disabled={newItemsLoading}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\n\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst ComicsPage = () => {\n    return (\n        <>\n            <Helmet>\n                <meta\n                    name=\"description\"\n                    content=\"Page with list of our comics\"\n                />\n                <title>Comics page</title>\n            </Helmet>\n            <AppBanner />\n            <ComicsList />\n        </>\n    )\n}\n\nexport default ComicsPage;","import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n    const [process, setProcess] = useState('waiting');\n\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\n\n        setProcess('loading');\n        try {\n            const response = await fetch(url, { method, body, headers });\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n\n            return data;\n        } catch (e) {\n            setProcess('error');\n            throw e;\n        }\n\n    }, []);\n\n    const clearError = useCallback(() => {\n        setProcess('loading');\n    }, []);\n\n    return { request, clearError, process, setProcess };\n}","import { useHttp } from \"../hooks/http.hook\";\n\nconst useMarvelService = () => {\n    const { request, clearError, process, setProcess } = useHttp();\n\n\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'; // лодаш означает что изменять эту переменную нельзя\n    const _apiKey = 'apikey=074a837690f9cea45462fd649d4b3bcb';\n    const _baseOffset = 210;\n\n\n    const getAllCharacters = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getCharacterByName = async (name) => {\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    };\n\n    const getAllComics = async (offset = _baseOffset) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComic = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'This character do not have description',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items,\n        }\n    }\n\n    const _transformComics = (comic) => {\n        return {\n            id: comic.id,\n            title: comic.title,\n            description: comic.description || 'There is no description',\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\n            price: comic.prices[0].price == 0 ? 'NOT AVAILABLE' : comic.prices[0].price + '$',\n            pages: comic.pageCount ? comic.pageCount + ' p.' : 'No information about the number of pages',\n            language: comic.textObjects.language || 'en-us',\n        }\n    }\n\n    return {\n        clearError,\n        process,\n        setProcess,\n        getAllCharacters,\n        getCharacter,\n        getCharacterByName,\n        getAllComics,\n        getComic,\n    };\n}\n\nexport default useMarvelService;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","img","style","display","width","height","objectFit","margin","setContent","process","Component","newItemsLoading","Spinner","Error","ComicsList","comicsList","setComicsList","useState","offset","setOffset","setNewItemsLoading","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsList","newComicsList","ended","length","arr","items","map","item","i","title","thumbnail","price","tabIndex","Link","to","concat","id","renderItems","onClick","disabled","ComicsPage","_Fragment","Helmet","name","content","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","comic","prices","pages","pageCount","language","textObjects","getAllCharacters","data","results","getCharacter","res","getCharacterByName","getComic"],"sourceRoot":""}